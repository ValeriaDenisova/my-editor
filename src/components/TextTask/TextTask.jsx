import styles from './style.module.css';

export const TextTask = () => {

  return (
    <div className={styles.textTask}>
      <h1>Решите задачу:</h1>

      <p>Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в одну из куч (по своему выбору) один камень или увеличить количество камней в куче в два раза. Например, пусть в одной куче 10 камней, а в другой 5 камней; такую позицию в игре будем обозначать (10, 5). Тогда за один ход можно получить любую из четырёх позиций: (11, 5), (20, 5), (10, 6), (10, 10). Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.</p>
      <p>Игра завершается в тот момент, когда суммарное количество камней в кучах становится не менее 77. Победителем считается игрок, сделавший последний ход, то есть первым получивший такую позицию, при которой в кучах будет 77 или больше камней.</p>
      <p>В начальный момент в первой куче было семь камней, во второй куче  — S камней; 1 ≤ S ≤ 69.</p>
      <p>Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой ситуации, которая ему может встретиться при различной игре противника. В описание выигрышной стратегии не следует включать ходы играющего по этой стратегии игрока, не являющиеся для него безусловно выигрышными, то есть не являющиеся выигрышными независимо от игры противника.</p>
      <p>Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите минимальное значение S, когда такая ситуация возможна.</p>
      <p className={styles.TaskAnswer}>Попробуйте написать программу, которая решит эту задачу. В ответе должно получиться 18.</p>
    </div>
     
  );
};